From b61f8001e56e968fe2a2924363bd993c55660121 Mon Sep 17 00:00:00 2001
From: muink <hukk1996@gmail.com>
Date: Sat, 14 Jan 2023 11:12:51 +0100
Subject: [PATCH 2/3] allow specified port

---
 main.go | 18 +++++++++++++++++-
 port.go | 14 ++++++++++++++
 2 files changed, 31 insertions(+), 1 deletion(-)
 create mode 100644 port.go

diff --git a/main.go b/main.go
index 261a579..266365a 100644
--- a/main.go
+++ b/main.go
@@ -7,6 +7,7 @@ import (
 	"net"
 	"net/http"
 	"os"
+	"strconv"
 	"sync"
 )
 
@@ -17,6 +18,9 @@ var localResolveIp4Enabled bool
 var localResolveIp6AddressString *string
 var localResolveIp6Address net.IP
 var localResolveIp6Enabled bool
+var localResolvePortString *string
+var localResolvePort int
+var localResolvePortInvaild bool
 var showVersionOnly *bool
 
 func main() {
@@ -24,6 +28,7 @@ func main() {
 	// arguments parsing
 	localResolveIp4AddressString = flag.String("ipv4", "", "the IPv4 address to this server")
 	localResolveIp6AddressString = flag.String("ipv6", "", "the IPv6 address to this server")
+	localResolvePortString = flag.String("port", "", "listening port of server")
 	showVersionOnly = flag.Bool("version", false, "show version and quit")
 	flag.Parse()
 
@@ -54,6 +59,17 @@ func main() {
 		log.Printf("[CONFIG] Local server IPv6 address: %s\n", localResolveIp6Address)
 	}
 
+	if len(*localResolvePortString) == 0 {
+		localResolvePort = 80
+		log.Println("[CONFIG] Listen port: 80")
+	} else {
+		localResolvePort, localResolvePortInvaild = parsePort(*localResolvePortString)
+		if localResolvePortInvaild || localResolvePort == 0 {
+			localResolvePort = 80
+		}
+		log.Printf("[CONFIG] Listen port: %s\n", strconv.Itoa(localResolvePort))
+	}
+
 	// HTTP router setup
 	mux := http.DefaultServeMux
 	mux.HandleFunc("/robots.txt", robots_txt)
@@ -75,7 +91,7 @@ func main() {
 
 	// HTTP server setup
 	plainHttpServer := &http.Server{
-		Addr:    ":80",
+		Addr:    ":" + strconv.Itoa(localResolvePort),
 		Handler: loggingHandler,
 	}
 	go plainHttpServer.ListenAndServe()
diff --git a/port.go b/port.go
new file mode 100644
index 0000000..c1358c3
--- /dev/null
+++ b/port.go
@@ -0,0 +1,14 @@
+
+package main
+
+import (
+	"strconv"
+)
+
+func parsePort(service string) (port int, error bool) {
+	prt, err := strconv.ParseUint(service, 10, 16)
+	if err != nil {
+		return 0, true
+	}
+	return int(prt), false
+}
-- 
2.45.2

